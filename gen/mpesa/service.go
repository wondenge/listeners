// Code generated by goa v3.1.2, DO NOT EDIT.
//
// mpesa service
//
// Command:
// $ goa gen github.com/wondenge/listeners/design

package mpesa

import (
	"context"
)

// Service is the mpesa service interface.
type Service interface {
	// Account Balance Queue TimeOut URL
	AccountBalanceTimeout(context.Context, *AccountBalanceResult) (res string, err error)
	// Account Balance Result URL
	AccountBalanceResultEndpoint(context.Context, *AccountBalanceResult) (res string, err error)
	// Transaction Status Queue TimeOut URL
	TransactionStatusTimeout(context.Context, *TransactionStatusResult) (res string, err error)
	// Transaction Status Result URL
	TransactionStatusResultEndpoint(context.Context, *TransactionStatusResult) (res string, err error)
	// Reversal Queue TimeOut URL
	ReversalTimeout(context.Context, *ReversalResult) (res string, err error)
	// Reversal Result URL
	ReversalResultEndpoint(context.Context, *ReversalResult) (res string, err error)
	// B2C Queue TimeOut URL
	B2CTimeout(context.Context, *B2CPaymentResult) (res string, err error)
	// B2C Result URL
	B2CResult(context.Context, *B2CPaymentResult) (res string, err error)
	// C2B Validation URL
	C2BValidation(context.Context, *ValidationResult) (res string, err error)
	// C2B Confirmation URL
	C2BConfirmation(context.Context, *ConfirmationResult) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "mpesa"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [10]string{"AccountBalanceTimeout", "AccountBalanceResult", "TransactionStatusTimeout", "TransactionStatusResult", "ReversalTimeout", "ReversalResult", "B2CTimeout", "B2CResult", "C2BValidation", "C2BConfirmation"}

// AccountBalanceResult is the payload type of the mpesa service
// AccountBalanceTimeout method.
type AccountBalanceResult struct {
	ResultType               *int
	ResultCode               *int
	ResultDesc               *string
	OriginatorConversationID *string
	ConversationID           *string
	TransactionID            *string
	ResultParameters         *struct {
		ResultParameter *struct {
			AccountBalance  map[string]string
			BOCompletedTime map[string]string
		}
	}
	ReferenceData *struct {
		ReferenceItem map[string]string
	}
}

// TransactionStatusResult is the payload type of the mpesa service
// TransactionStatusTimeout method.
type TransactionStatusResult struct {
	Result *struct {
		ResultType               *int
		ResultCode               *int
		ResultDesc               *string
		OriginatorConversationID *string
		ConversationID           *string
		TransactionID            *string
		ResultParameters         *struct {
			ResultParameter *struct {
				ReceiptNo                map[string]string
				ConversationID           map[string]string
				FinalisedTime            map[string]int
				Amount                   map[string]int
				TransactionStatus        map[string]string
				ReasonType               map[string]string
				TransactionReason        map[string]string
				DebitPartyCharges        map[string]string
				DebitAccountType         map[string]string
				InitiatedTime            map[string]int
				OriginatorConversationID map[string]string
				CreditPartyName          map[string]string
				DebitPartyName           map[string]string
			}
		}
		ReferenceData *struct {
			ReferenceItem map[string]string
		}
	}
}

// ReversalResult is the payload type of the mpesa service ReversalTimeout
// method.
type ReversalResult struct {
	Result *struct {
		ResultType               *int
		ResultCode               *int
		ResultDesc               *string
		OriginatorConversationID *string
		ConversationID           *string
		TransactionID            *string
		ReferenceData            *struct {
			ReferenceItem map[string]string
		}
	}
}

// B2CPaymentResult is the payload type of the mpesa service B2CTimeout method.
type B2CPaymentResult struct {
	Result *struct {
		// Status code that indicates whether the transaction was already sent
		ResultType int
		// Numeric status code that indicates the status of the transaction processing
		ResultCode *int
		// Message from the API that gives the status of the request
		ResultDesc *string
		// Global unique identifier for the transaction request.
		OriginatorConversationID *string
		// Global unique identifier for the transaction request.
		ConversationID *string
		// Unique M-PESA transaction ID for every payment request.
		TransactionID *string
	}
	ResultParameters *struct {
		ResultParameter *struct {
			// This is a unique M-PESA transaction ID for every payment request.
			TransactionReceipt map[string]string
			// This is the amount that was transacted.
			TransactionAmount map[string]int
			// Available balance of the Working account under the B2C shortcode used in the
			// transaction.
			B2CWorkingAccountAvailableFunds map[string]int
			// Available balance of the Utility account under the B2C shortcode used in the
			// transaction.
			B2CUtilityAccountAvailableFunds map[string]int
			// This is the date and time that the transaction completed M-PESA.
			TransactionCompletedDateTime map[string]string
			// This is the name and phone number of the customer who received the payment.
			ReceiverPartyPublicName map[string]string
			// Available balance of the Charges Paid account under the B2C shortcode used
			// in the transaction.
			B2CChargesPaidAccountAvailableFunds map[string]int
			// This is a key that indicates whether the customer is a M-PESA registered
			// customer or not
			B2CRecipientIsRegisteredCustomer map[string]string
		}
	}
	ReferenceData *struct {
		ReferenceItem map[string]string
	}
}

// ValidationResult is the payload type of the mpesa service C2BValidation
// method.
type ValidationResult struct {
	// The transaction type specified during the payment request.
	TransactionType *string
	// Unique M-Pesa transaction ID for every payment request
	TransID *string
	// Timestamp of the transaction
	TransTime *string
	// The Amount transacted normally a numeric value
	TransAmount *int
	// Organizations shortcode (Paybill or Buygoods)
	BusinessShortCode *int
	// Account number for which the customer is making the payment
	BillRefNumber *string
	InvoiceNumber *string
	// Current utility account balance of the payment receiving organization
	// shortcode
	OrgAccountBalance *int
	ThirdPartyTransID *string
	// Mobile number of the customer making the payment.
	MSISDN *int
	// First Name of the customer making the payment.
	FirstName *string
	// Middle Name of the customer making the payment.
	MiddleName *string
	// Last Name of the customer making payment.
	LastName *string
}

// ConfirmationResult is the payload type of the mpesa service C2BConfirmation
// method.
type ConfirmationResult struct {
	// The transaction type specified during the payment request.
	TransactionType *string
	// Unique M-Pesa transaction ID for every payment request
	TransID *string
	// Timestamp of the transaction
	TransTime *string
	// The Amount transacted normally a numeric value
	TransAmount *int
	// Organizations shortcode (Paybill or Buygoods)
	BusinessShortCode *int
	// Account number for which the customer is making the payment
	BillRefNumber *string
	InvoiceNumber *string
	// Current utility account balance of the payment receiving organization
	// shortcode
	OrgAccountBalance *int
	ThirdPartyTransID *string
	// Mobile number of the customer making the payment.
	MSISDN *int
	// First Name of the customer making the payment.
	FirstName *string
	// Middle Name of the customer making the payment.
	MiddleName *string
	// Last Name of the customer making payment.
	LastName *string
}
