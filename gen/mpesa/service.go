// Code generated by goa v3.1.2, DO NOT EDIT.
//
// mpesa service
//
// Command:
// $ goa gen github.com/wondenge/listeners/design

package mpesa

import (
	"context"
)

// Service is the mpesa service interface.
type Service interface {
	// Account Balance Queue TimeOut URL
	AccountBalanceTimeout(context.Context, *AccountBalanceResult) (res string, err error)
	// Account Balance Result URL
	AccountBalanceResultEndpoint(context.Context, *AccountBalanceResult) (res string, err error)
	// Transaction Status Queue TimeOut URL
	TransactionStatusTimeout(context.Context, *TransactionStatusResult) (res string, err error)
	// Transaction Status Result URL
	TransactionStatusResultEndpoint(context.Context, *TransactionStatusResult) (res string, err error)
	// Reversal Queue TimeOut URL
	ReversalTimeout(context.Context, *ReversalResult) (res string, err error)
	// Reversal Result URL
	ReversalResultEndpoint(context.Context, *ReversalResult) (res string, err error)
	// B2C Queue TimeOut URL
	B2CTimeout(context.Context, *B2CPaymentResult) (res string, err error)
	// B2C Result URL
	B2CResult(context.Context, *B2CPaymentResult) (res string, err error)
	// C2B Validation URL
	C2BValidation(context.Context, *ValidationResult) (res string, err error)
	// C2B Confirmation URL
	C2BConfirmation(context.Context, *ConfirmationResult) (res string, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "mpesa"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [10]string{"AccountBalanceTimeout", "AccountBalanceResult", "TransactionStatusTimeout", "TransactionStatusResult", "ReversalTimeout", "ReversalResult", "B2CTimeout", "B2CResult", "C2BValidation", "C2BConfirmation"}

// AccountBalanceResult is the payload type of the mpesa service
// AccountBalanceTimeout method.
type AccountBalanceResult struct {
	MpesaResultParameters *string
	// Status code indicating whether transaction was already sent to your listener
	MpesaResultType *int
	// Numeric status code indicating the status of the transaction processing
	MpesaResultCode *int
	// Message from the API that gives the status of the request
	MpesaResultDesc *string
	// Unique identifier for the transaction request.
	OriginatorConversationID *string
	// Unique identifier for the transaction request.
	ConversationID *string
	// Unique M-PESA transaction ID for every payment request.
	TransactionID *string
	// Queue Timeout URL
	QueueTimeoutURL *string
	Occasion        *string
}

// TransactionStatusResult is the payload type of the mpesa service
// TransactionStatusTimeout method.
type TransactionStatusResult struct {
	ResultParameters *string
	// Status code indicating whether transaction was already sent to your listener
	MpesaResultType *int
	// Numeric status code indicating the status of the transaction processing
	MpesaResultCode *int
	// Message from the API that gives the status of the request
	MpesaResultDesc *string
	// Unique identifier for the transaction request.
	OriginatorConversationID *string
	// Unique identifier for the transaction request.
	ConversationID *string
	// Unique M-PESA transaction ID for every payment request.
	TransactionID *string
	// Queue Timeout URL
	QueueTimeoutURL *string
	Occasion        *string
}

// ReversalResult is the payload type of the mpesa service ReversalTimeout
// method.
type ReversalResult struct {
	// Status code indicating whether transaction was already sent to your listener
	MpesaResultType *int
	// Numeric status code indicating the status of the transaction processing
	MpesaResultCode *int
	// Message from the API that gives the status of the request
	MpesaResultDesc *string
	// Unique identifier for the transaction request.
	OriginatorConversationID *string
	// Unique identifier for the transaction request.
	ConversationID *string
	// Unique M-PESA transaction ID for every payment request.
	TransactionID *string
	// Queue Timeout URL
	QueueTimeoutURL *string
	Occasion        *string
}

// B2CPaymentResult is the payload type of the mpesa service B2CTimeout method.
type B2CPaymentResult struct {
	MpesaResultParameters *string
	// Status code indicating whether transaction was already sent to your listener
	MpesaResultType *int
	// Numeric status code indicating the status of the transaction processing
	MpesaResultCode *int
	// Message from the API that gives the status of the request
	MpesaResultDesc *string
	// Unique identifier for the transaction request.
	OriginatorConversationID *string
	// Unique identifier for the transaction request.
	ConversationID *string
	// Unique M-PESA transaction ID for every payment request.
	TransactionID *string
	// Queue Timeout URL
	QueueTimeoutURL *string
	Occasion        *string
}

// ValidationResult is the payload type of the mpesa service C2BValidation
// method.
type ValidationResult struct {
	// Transaction type specified during the payment request.
	TransactionType *string
	// Unique M-Pesa transaction ID for every payment request
	TransID *string
	// Timestamp of the transaction
	TransTime *string
	// The Amount transacted normally a numeric value
	TransAmount *int
	// Organizations shortcode (Paybill or Buygoods)
	BusinessShortCode *int
	// Account number for which the customer is making the payment
	BillRefNumber *string
	InvoiceNumber *string
	// Current utility account balance of the payment receiving organization
	// shortcode
	OrgAccountBalance *int
	ThirdPartyTransID *string
	// Mobile number of the customer making the payment.
	MSISDN *int
	// First Name of the customer making the payment.
	FirstName *string
	// Middle Name of the customer making the payment.
	MiddleName *string
	// Last Name of the customer making payment.
	LastName *string
}

// ConfirmationResult is the payload type of the mpesa service C2BConfirmation
// method.
type ConfirmationResult struct {
	// Transaction type specified during the payment request.
	TransactionType *string
	// Unique M-Pesa transaction ID for every payment request
	TransID *string
	// Timestamp of the transaction
	TransTime *string
	// The Amount transacted normally a numeric value
	TransAmount *int
	// Organizations shortcode (Paybill or Buygoods)
	BusinessShortCode *int
	// Account number for which the customer is making the payment
	BillRefNumber *string
	InvoiceNumber *string
	// Current utility account balance of the payment receiving organization
	// shortcode
	OrgAccountBalance *int
	ThirdPartyTransID *string
	// Mobile number of the customer making the payment.
	MSISDN *int
	// First Name of the customer making the payment.
	FirstName *string
	// Middle Name of the customer making the payment.
	MiddleName *string
	// Last Name of the customer making payment.
	LastName *string
}
