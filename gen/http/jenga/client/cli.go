// Code generated by goa v3.1.2, DO NOT EDIT.
//
// jenga HTTP client CLI support package
//
// Command:
// $ goa gen github.com/wondenge/listeners/design

package client

import (
	"encoding/json"
	"fmt"

	jenga "github.com/wondenge/listeners/gen/jenga"
)

// BuildPublishPayload builds the payload for the jenga publish endpoint from
// CLI flags.
func BuildPublishPayload(jengaPublishBody string, jengaPublishAuth string) (*jenga.JengaCallbackPayload, error) {
	var err error
	var body PublishRequestBody
	{
		err = json.Unmarshal([]byte(jengaPublishBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"additionalInfo\": \"Additional information\",\n      \"message\": \"254796778039 Peter Test \",\n      \"mobileNumber\": \"254796778039\",\n      \"resultCode\": \"0\",\n      \"resultDescription\": \"The service request is processed successfully.\",\n      \"rrn\": \" 190508120533 \",\n      \"service\": \"Mpesa\",\n      \"tranID\": \" NC84PQMWGZ\"\n   }'")
		}
	}
	var auth *string
	{
		if jengaPublishAuth != "" {
			auth = &jengaPublishAuth
		}
	}
	v := &jenga.JengaCallbackPayload{
		MobileNumber:      body.MobileNumber,
		Message:           body.Message,
		Rrn:               body.Rrn,
		Service:           body.Service,
		TranID:            body.TranID,
		ResultCode:        body.ResultCode,
		ResultDescription: body.ResultDescription,
		AdditionalInfo:    body.AdditionalInfo,
	}
	v.Auth = auth

	return v, nil
}

// BuildAlertsPayload builds the payload for the jenga alerts endpoint from CLI
// flags.
func BuildAlertsPayload(jengaAlertsBody string, jengaAlertsAuth string) (*jenga.AccountAlerts, error) {
	var err error
	var body AlertsRequestBody
	{
		err = json.Unmarshal([]byte(jengaAlertsBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, example of valid JSON:\n%s", "'{\n      \"account\": \"0111234241028\",\n      \"additionalInfo\": \"MPS 254723000000 MKR35QEKV7 A N Other/537620\",\n      \"amount\": \"10\",\n      \"billNumber\": \"A N Other\",\n      \"date\": \"2018-11-27 00:00:00.0\",\n      \"mobileNumber\": \"254796778039\",\n      \"name\": \"A N Other\",\n      \"orderAmount\": \"10\",\n      \"paymentMode\": \"TPG\",\n      \"reference\": \"Consequatur qui qui itaque.\",\n      \"servedBy\": \"EQ\",\n      \"serviceCharge\": \"10\",\n      \"till\": \"Reprehenderit est pariatur odio ut.\",\n      \"transactionType\": \"C\"\n   }'")
		}
	}
	var auth *string
	{
		if jengaAlertsAuth != "" {
			auth = &jengaAlertsAuth
		}
	}
	v := &jenga.AccountAlerts{
		Name:            body.Name,
		MobileNumber:    body.MobileNumber,
		Reference:       body.Reference,
		Date:            body.Date,
		PaymentMode:     body.PaymentMode,
		Amount:          body.Amount,
		Till:            body.Till,
		BillNumber:      body.BillNumber,
		OrderAmount:     body.OrderAmount,
		ServiceCharge:   body.ServiceCharge,
		ServedBy:        body.ServedBy,
		AdditionalInfo:  body.AdditionalInfo,
		TransactionType: body.TransactionType,
		Account:         body.Account,
	}
	v.Auth = auth

	return v, nil
}
