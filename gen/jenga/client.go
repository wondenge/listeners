// Code generated by goa v3.1.2, DO NOT EDIT.
//
// jenga client
//
// Command:
// $ goa gen github.com/wondenge/listeners/design

package jenga

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "jenga" service client.
type Client struct {
	PublishEndpoint endpoint.Endpoint
	AlertsEndpoint  endpoint.Endpoint
}

// NewClient initializes a "jenga" service client given the endpoints.
func NewClient(publish, alerts endpoint.Endpoint) *Client {
	return &Client{
		PublishEndpoint: publish,
		AlertsEndpoint:  alerts,
	}
}

// Publish calls the "publish" endpoint of the "jenga" service.
func (c *Client) Publish(ctx context.Context, p *JengaCallbackPayload) (res *JengaCallbackMedia, err error) {
	var ires interface{}
	ires, err = c.PublishEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*JengaCallbackMedia), nil
}

// Alerts calls the "alerts" endpoint of the "jenga" service.
func (c *Client) Alerts(ctx context.Context, p *AccountAlerts) (res string, err error) {
	var ires interface{}
	ires, err = c.AlertsEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}
